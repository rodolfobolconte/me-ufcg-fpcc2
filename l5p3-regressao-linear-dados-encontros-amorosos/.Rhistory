theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_boxplot() +
geom_jitter(alpha=.1, height=.3) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = Yes")
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot() +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=NULL) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=0) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01, color=red) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01, color=red) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01, color="red") +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='\nValor', y='Variáveis\n', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01, color="red") +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_boxplot() +
geom_jitter(alpha=.1, height=.3) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3) +
geom_boxplot(fill=.01, color="red") +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='lightblue') +
geom_boxplot(fill=.01) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='lightred') +
geom_boxplot(fill=.01) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=.01) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16))
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=.01) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_boxplot() +
geom_jitter(alpha=.1, height=.3) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='darkgreen') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=0, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.1, height=.3, color='red') +
geom_boxplot(fill=.0001, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='red') +
geom_boxplot(fill=.0001, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='red') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='darkgreen') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='darkgreen') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='red') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='green') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='lightgreen') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='chartreuse2') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grid.arrange(grafico_yes, grafico_no)
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='chartreuse33') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='chartreuse3') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x='', y='', subtitle = "Match = Yes")
grid.arrange(grafico_yes, grafico_no)
glimpse(dataset)
glm(dec ~ attr + sinc + intel + fun + amb, variaveis_descritivas, family="binomial")
variaveis_descritivas %>% mutate(dec=if_else(dec=='yes', 1, 0))
variaveis_descritivas
variaveis_descritivas = variaveis_descritivas %>% mutate(dec=if_else(dec=='yes', 1, 0))
glm(dec ~ attr + sinc + intel + fun + amb, variaveis_descritivas, family="binomial")
modelo = glm(dec ~ attr + sinc + intel + fun + amb, variaveis_descritivas, family="binomial")
modelo
modelo = glm(dec ~ attr + sinc + intel + fun + amb, variaveis_descritivas, family="binomial", conf=T)
modelo = glm(dec ~ attr + sinc + intel + fun + amb, variaveis_descritivas, family="binomial")
tidy(modelo, conf.int=T)
tidy(modelo, conf.int=T) %>%
select(-statistic, -p.value)
estimativas = tidy(modelo, conf.int=T) %>%
select(-statistic, -p.value)
estimativas
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.max)) +
geom_pointrange()
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high)) +
geom_pointrange()
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=term)) +
geom_pointrange()
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange()
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0)
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2)
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2)
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
scale_x_continuous(breaks = seq(-.3,.7, .1))
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
scale_x_continuous(values = seq(-.3,.7, .1))
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
scale_x_continuous(breaks = seq(-.3,.7, .1))
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2)
```{r}
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2)
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='Estimativa', y='Variáveis')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
```{r fig.cap=""}
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(x=estimate, xmin=conf.low, xmax=conf.high, y=reorder(term, estimate))) +
geom_pointrange() +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high)) +
geom_point(aes(x=estimate))
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high)) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), size=.5) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), size=.2) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), height=.2) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), size=1) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=1) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=10) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.5) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate)) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate), size=3) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate), size=) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate), size=4) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, estimate))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate), size=3) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
estimativas %>% filter(term != "(Intercept)") %>%
ggplot(aes(y=reorder(term, conf.low))) +
geom_errorbar(aes(xmin=conf.low, xmax=conf.high), width=.3) +
geom_point(aes(x=estimate), size=3) +
geom_vline(xintercept=0) +
geom_vline(xintercept=.3, lty=2) +
geom_vline(xintercept=-.3, lty=2) +
theme(text=element_text(size=16)) +
labs(x='\nEstimativa', y='Variáveis\n')
count(variaveis_descritivas)
count(variaveis_descritivas %>% group_by(dec))
count(variaveis_descritivas)
variaveis_descritivas = dataset %>%
filter(attr!="NA", sinc!="NA", intel!="NA", fun!="NA", amb!="NA", dec!="NA") %>%
select(iid, attr, sinc, intel, fun, amb, dec)
count(variaveis_descritivas)
count(variaveis_descritivas %>% group_by(dec))
pscl::pR2(modelo)
library(pscl)
install.packages(pscl)
install.packages("pscl")
library(pscl)
pscl::pR2(modelo)
grid.arrange(grafico_yes, grafico_no,
left = textGrob("Variáveis",
gp = gpar(fontsize=16)),
bottom = textGrob("Valor",
gp = gpar(fontsize=16)))
grid.arrange(grafico_yes, grafico_no,
left = textGrob("Variáveis",
gp = gpar(fontsize=16), r=90),
bottom = textGrob("Valor",
gp = gpar(fontsize=16)))
grafico_yes = atributos_yes %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='chartreuse3') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x=NULL, y='', subtitle = "Match = Yes")
grafico_no = atributos_no %>%
ggplot(aes(value, variable)) +
geom_jitter(alpha=.2, height=.3, color='red') +
geom_boxplot(fill=.01, coef = 1000) +
scale_x_continuous(breaks=seq(0,10,1)) +
theme(text=element_text(size=16)) +
labs(x=NULL, y='', subtitle = "Match = No")
grid.arrange(grafico_yes, grafico_no,
left = textGrob("Variáveis",
gp = gpar(fontsize=16), r=90),
bottom = textGrob("Valor",
gp = gpar(fontsize=16)))
