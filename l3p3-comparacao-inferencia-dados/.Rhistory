#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
dados = read_csv(here::here("data/satisfacoes.csv"),
col_types = "idcc")
#TIRANDO USUÁRIO 1 E 24 POR TEREM MENOS DE 5 AVALIAÇÕES E O CENÁRIO LIKE/DESLIKE POIS NÃO É PEDIDO NA QUESTÃO
dados = dados %>% filter(user_id!=1 & user_id!=24,
scenario!='like/dislike')
media_variantes = dados %>%
group_by(scenario) %>%
summarise(media=mean(satisfaction))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=16))
#CALCULO DE THETA
theta <- function(dataset, indices, tipo1, tipo2) {
agrupado = dataset %>%
slice(indices) %>%
group_by(scenario) %>%
summarise(media = mean(satisfaction))
b = agrupado %>% filter(scenario == tipo1) %>%
pull(media)
l = agrupado %>% filter(scenario == tipo2) %>%
pull(media)
b-l
}
#FUNÇÃO QUE DIVIDE CONJUNTO DE DADOS E CALCULA THETA
comparacao = function(tipo1, tipo2) {
comparacao_dados = dados %>%
filter(scenario %in% c(tipo1, tipo2))
set.seed(123)
#GERAÇÃO DO BOOTSTRAP
resultado_bootstrap = boot(data = comparacao_dados,
statistic = theta,
R = 2000,
tipo1=tipo1,
tipo2=tipo2) %>%
tidy(conf.level = .95,
conf.method = "bca",
conf.int = TRUE)
resultado_bootstrap %>%
mutate(variante_comparada=tipo2)
}
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
baseline %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Baseline com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,0,.5),
minor_breaks=seq(-3,0,0.1)) +
theme(text=element_text(size=18))
combined = bind_rows(comparacao("combined", "skip"),
comparacao("combined", "up/downvoting"),
comparacao("combined", "baseline"))
combined %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=c(-.3,.3), lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Combined com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,2.5,.5),
minor_breaks=seq(-3,2.5,0.1)) +
theme(text=element_text(size=16))
combined
skip_down = comparacao("skip", "up/downvoting")
skip_down %>%
ggplot(aes(variante_comparada, statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Skip e Up/Downvoting', x='') +
scale_y_continuous(breaks=seq(-2.5,0,.5),
minor_breaks=seq(-2.5,0,0.1)) +
theme(text=element_text(size=16))
skip_down = comparacao("skip", "up/downvoting")
skip_down %>%
ggplot(aes(variante_comparada, statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Skip e Up/Downvoting', x='') +
scale_y_continuous(breaks=seq(-2.5,0,.5),
minor_breaks=seq(-2.5,0,0.1)) +
theme(text=element_text(size=16))
skip_down
knitr::opts_chunk$set(tidy = TRUE,
#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
dados = read_csv(here::here("data/satisfacoes.csv"),
col_types = "idcc")
#TIRANDO USUÁRIO 1 E 24 POR TEREM MENOS DE 5 AVALIAÇÕES E O CENÁRIO LIKE/DESLIKE POIS NÃO É PEDIDO NA QUESTÃO
dados = dados %>% filter(user_id!=1 & user_id!=24,
scenario!='like/dislike')
media_variantes = dados %>%
group_by(scenario) %>%
summarise(media=mean(satisfaction))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=16))
#CALCULO DE THETA
theta <- function(dataset, indices, tipo1, tipo2) {
agrupado = dataset %>%
slice(indices) %>%
group_by(scenario) %>%
summarise(media = mean(satisfaction))
b = agrupado %>% filter(scenario == tipo1) %>%
pull(media)
l = agrupado %>% filter(scenario == tipo2) %>%
pull(media)
b-l
}
#FUNÇÃO QUE DIVIDE CONJUNTO DE DADOS E CALCULA THETA
comparacao = function(tipo1, tipo2) {
comparacao_dados = dados %>%
filter(scenario %in% c(tipo1, tipo2))
set.seed(123)
#GERAÇÃO DO BOOTSTRAP
resultado_bootstrap = boot(data = comparacao_dados,
statistic = theta,
R = 2000,
tipo1=tipo1,
tipo2=tipo2) %>%
tidy(conf.level = .95,
conf.method = "bca",
conf.int = TRUE)
resultado_bootstrap %>%
mutate(variante_comparada=tipo2)
}
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
baseline %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Baseline com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,0,.5),
minor_breaks=seq(-3,0,0.1)) +
theme(text=element_text(size=18))
combined = bind_rows(comparacao("combined", "skip"),
comparacao("combined", "up/downvoting"),
comparacao("combined", "baseline"))
combined %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=c(-.3,.3), lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Combined com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,2.5,.5),
minor_breaks=seq(-3,2.5,0.1)) +
theme(text=element_text(size=16))
skip_down = comparacao("skip", "up/downvoting")
skip_down %>%
ggplot(aes(variante_comparada, statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Skip e Up/Downvoting', x='') +
scale_y_continuous(breaks=seq(-2.5,0,.5),
minor_breaks=seq(-2.5,0,0.1)) +
theme(text=element_text(size=16))
knitr::opts_chunk$set(tidy = TRUE,
#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
dados = read_csv(here::here("data/satisfacoes.csv"),
col_types = "idcc")
#TIRANDO USUÁRIO 1 E 24 POR TEREM MENOS DE 5 AVALIAÇÕES E O CENÁRIO LIKE/DESLIKE POIS NÃO É PEDIDO NA QUESTÃO
dados = dados %>% filter(user_id!=1 & user_id!=24,
scenario!='like/dislike')
media_variantes = dados %>%
group_by(scenario) %>%
summarise(media=mean(satisfaction))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), size=.5) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), height=.5) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), weight=.5) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), weight=2) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), height=10) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), shape=10) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), shape=1) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis'), shape=2) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
media_variantes = dados %>%
group_by(scenario) %>%
summarise(media=mean(satisfaction))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
#CALCULO DE THETA
theta <- function(dataset, indices, tipo1, tipo2) {
agrupado = dataset %>%
slice(indices) %>%
group_by(scenario) %>%
summarise(media = mean(satisfaction))
b = agrupado %>% filter(scenario == tipo1) %>%
pull(media)
l = agrupado %>% filter(scenario == tipo2) %>%
pull(media)
b-l
}
#FUNÇÃO QUE DIVIDE CONJUNTO DE DADOS E CALCULA THETA
comparacao = function(tipo1, tipo2) {
comparacao_dados = dados %>%
filter(scenario %in% c(tipo1, tipo2))
set.seed(123)
#GERAÇÃO DO BOOTSTRAP
resultado_bootstrap = boot(data = comparacao_dados,
statistic = theta,
R = 2000,
tipo1=tipo1,
tipo2=tipo2) %>%
tidy(conf.level = .95,
conf.method = "bca",
conf.int = TRUE)
resultado_bootstrap %>%
mutate(variante_comparada=tipo2)
}
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
baseline %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Baseline com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,0,.5),
minor_breaks=seq(-3,0,0.1)) +
theme(text=element_text(size=20))
knitr::opts_chunk$set(tidy = TRUE,
#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
dados = read_csv(here::here("data/satisfacoes.csv"),
col_types = "idcc")
#TIRANDO USUÁRIO 1 E 24 POR TEREM MENOS DE 5 AVALIAÇÕES E O CENÁRIO LIKE/DESLIKE POIS NÃO É PEDIDO NA QUESTÃO
dados = dados %>% filter(user_id!=1 & user_id!=24,
scenario!='like/dislike')
media_variantes = dados %>%
group_by(scenario) %>%
summarise(media=mean(satisfaction))
dados %>%
ggplot(aes(satisfaction, reorder(scenario, satisfaction))) +
geom_boxplot(aes(color='satis')) +
geom_point(data=media_variantes, aes(media, scenario, color='satis_media'),
size=3) +
labs(x='\nSatisfação', y='Variantes\n') +
scale_color_manual(name='Legenda:',
values=c('satis'='black','satis_media'='steelblue'),
labels=c('Satisfação\nIndividual', 'Média de\nSatisfação')) +
scale_x_continuous(breaks=seq(1,5,.5),
minor_breaks=seq(1,5,.5)) +
theme(text=element_text(size=18))
#CALCULO DE THETA
theta <- function(dataset, indices, tipo1, tipo2) {
agrupado = dataset %>%
slice(indices) %>%
group_by(scenario) %>%
summarise(media = mean(satisfaction))
b = agrupado %>% filter(scenario == tipo1) %>%
pull(media)
l = agrupado %>% filter(scenario == tipo2) %>%
pull(media)
b-l
}
#FUNÇÃO QUE DIVIDE CONJUNTO DE DADOS E CALCULA THETA
comparacao = function(tipo1, tipo2) {
comparacao_dados = dados %>%
filter(scenario %in% c(tipo1, tipo2))
set.seed(123)
#GERAÇÃO DO BOOTSTRAP
resultado_bootstrap = boot(data = comparacao_dados,
statistic = theta,
R = 2000,
tipo1=tipo1,
tipo2=tipo2) %>%
tidy(conf.level = .95,
conf.method = "bca",
conf.int = TRUE)
resultado_bootstrap %>%
mutate(variante_comparada=tipo2)
}
baseline = bind_rows(comparacao("baseline", "skip"),
comparacao("baseline", "up/downvoting"),
comparacao("baseline", "combined"))
baseline %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Baseline com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,0,.5),
minor_breaks=seq(-3,0,0.1)) +
theme(text=element_text(size=20))
combined = bind_rows(comparacao("combined", "skip"),
comparacao("combined", "up/downvoting"),
comparacao("combined", "baseline"))
combined %>%
ggplot(aes(x=variante_comparada, y=statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=c(-.3,.3), lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Combined com Variantes', x='Variantes Comparadas\n') +
scale_y_continuous(breaks=seq(-3,2.5,.5),
minor_breaks=seq(-3,2.5,0.1)) +
theme(text=element_text(size=20))
skip_down = comparacao("skip", "up/downvoting")
skip_down %>%
ggplot(aes(variante_comparada, statistic, ymin=conf.low, ymax=conf.high)) +
geom_linerange() +
geom_point(size=3) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-.3, lty=2, alpha=.5) +
coord_flip() +
labs(y='\nDiferença da Média de Skip e Up/Downvoting', x='') +
scale_y_continuous(breaks=seq(-2.5,0,.5),
minor_breaks=seq(-2.5,0,0.1)) +
theme(text=element_text(size=20))
