geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', tipo1, 'e', tipo2), y='') +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=16))
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='') +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=16))
}
q1_executa_comparacao <- function(dados, tipo1, tipo2) {
q1_amostra_theta_chapeu_categ = q1_theta_chapeu_categ(dados, tipo1, tipo2)
q1_populacao_theta_nulo_categ = replicate(5000, q1_theta_nulo_categ(dados, tipo1, tipo2))
q1_p_value_categ = sum(abs(q1_populacao_theta_nulo_categ) >= abs(q1_amostra_theta_chapeu_categ)) / length(q1_populacao_theta_nulo_categ)
#q1_p_value_categ
q1_grafico_distribuicao_categ(tibble(media=q1_populacao_theta_nulo_categ),
tipo1, tipo2,
round(q1_amostra_theta_chapeu_categ,3),
round(q1_p_value_categ, 3),
-1.5, 1000)
}
graf_fal_fel = q1_executa_comparacao(q1_dados, "false smile", "felt smile")
graf_fal_mis = q1_executa_comparacao(q1_dados, "false smile", "miserable smile")
graf_fel_mis = q1_executa_comparacao(q1_dados, "felt smile", "miserable smile")
grid.arrange(graf_fal_fel,graf_fal_mis,graf_fel_mis, ncol=1,
bottom = textGrob("\nModelo Nulo entre Sorrisos",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico,0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
grafico_verb = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_verb),
"Expressão Verbal",
round(q2_theta_chapeu_cor_verb,3),
q2_p_value_verb,
-round(q2_theta_chapeu_cor_verb,3), 3000, '(b)')
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=16))
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=16))
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=14))
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=14))
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=14))
}
knitr::opts_chunk$set(tidy = TRUE,
#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
library(grid)
library(gridExtra)
library(quantreg)
library(scales)
q1_dados = read_csv(here::here("data/leniency.csv"),
col_types = "cdc")
q1_theta_chapeu <- function(dados) {
medias = dados %>%
group_by(with_smile) %>%
summarise(media=mean(leniency))
smile = medias %>% filter(with_smile=="yes") %>% pull(media)
nosmile = medias %>% filter(with_smile=="no") %>% pull(media)
smile - nosmile
}
q1_amostra_theta_chapeu = round(q1_theta_chapeu(q1_dados),3)
q1_theta_nulo <- function(dados) {
random = dados %>%
mutate(leniency_random=sample(leniency, n()))
medias = random %>%
group_by(with_smile) %>%
summarise(media_populacao=mean(leniency_random))
smile = medias %>% filter(with_smile=="yes") %>% pull(media_populacao)
nosmile = medias %>% filter(with_smile=="no") %>% pull(media_populacao)
smile - nosmile
}
q1_populacao_theta_nulo = replicate(5000, q1_theta_nulo(q1_dados))
q1_p_value = sum(abs(q1_populacao_theta_nulo) >= abs(q1_amostra_theta_chapeu)) / length(q1_populacao_theta_nulo)
tibble(media=q1_populacao_theta_nulo) %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=q1_amostra_theta_chapeu, color='red') +
geom_vline(xintercept=-q1_amostra_theta_chapeu, color='red') +
annotate("label", x=-1.25, y=1150, hjust=0, vjust=1,
label=paste("p-value:", round(q1_p_value,3), "\nTC: [", -q1_amostra_theta_chapeu, ",", q1_amostra_theta_chapeu, "]")) +
labs(x=paste('\nModelo Nulo entre Imagens com Sorriso e Sem Sorriso'), y='Quantidade\n') +
theme(text=element_text(size=16))
q1_theta_chapeu_categ <- function(dados, tipo1, tipo2) {
medias = dados %>%
group_by(smile) %>%
summarise(media=mean(leniency))
smile1 = medias %>% filter(smile==tipo1) %>% pull(media)
smile2 = medias %>% filter(smile==tipo2) %>% pull(media)
smile1 - smile2
}
q1_theta_nulo_categ <- function(dados, tipo1, tipo2) {
random = dados %>%
#filter(smile %in% c(tipo1, tipo2)) %>%
mutate(leniency_random=sample(leniency, n()))
medias = random %>%
group_by(smile) %>%
summarise(media_random=mean(leniency_random))
smile1 = medias %>% filter(smile==tipo1) %>% pull(media_random)
smile2 = medias %>% filter(smile==tipo2) %>% pull(media_random)
smile1 - smile2
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=14))
}
q1_executa_comparacao <- function(dados, tipo1, tipo2, subtitulo) {
q1_amostra_theta_chapeu_categ = q1_theta_chapeu_categ(dados, tipo1, tipo2)
q1_populacao_theta_nulo_categ = replicate(5000, q1_theta_nulo_categ(dados, tipo1, tipo2))
q1_p_value_categ = sum(abs(q1_populacao_theta_nulo_categ) >= abs(q1_amostra_theta_chapeu_categ)) / length(q1_populacao_theta_nulo_categ)
#q1_p_value_categ
q1_grafico_distribuicao_categ(tibble(media=q1_populacao_theta_nulo_categ),
tipo1, tipo2,
round(q1_amostra_theta_chapeu_categ,3),
round(q1_p_value_categ, 3),
-1.5, 1000, subtitulo)
}
graf_fal_fel = q1_executa_comparacao(q1_dados, "false smile", "felt smile", "(a)")
graf_fal_mis = q1_executa_comparacao(q1_dados, "false smile", "miserable smile", "(b)")
graf_fel_mis = q1_executa_comparacao(q1_dados, "felt smile", "miserable smile", "(c)")
grid.arrange(graf_fal_fel,graf_fal_mis,graf_fel_mis, ncol=1,
bottom = textGrob("\nModelo Nulo entre Sorrisos",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q2_dados = read_csv(here::here("data/sat-gpa.csv"),
col_types = "dddd")
q2_theta_chapeu_cor <- function(dados, col) {
cor(dados$comp_GPA, dados[[col]], method='pearson')
}
q2_theta_chapeu_cor_math = q2_theta_chapeu_cor(q2_dados, "math_SAT")
q2_theta_chapeu_cor_verb = q2_theta_chapeu_cor(q2_dados, "verb_SAT")
q2_theta_nulo_cor <- function(dados, col) {
random = dados %>%
mutate(comp_GPA_random = sample(comp_GPA, n()))
cor(random$comp_GPA_random, random[[col]], method='pearson')
}
q2_populacao_theta_nulo_math = replicate(5000, q2_theta_nulo_cor(q2_dados, "math_SAT"))
q2_p_value_math = sum(abs(q2_populacao_theta_nulo_math) >= abs(q2_theta_chapeu_cor_math)) / length(q2_populacao_theta_nulo_math)
q2_p_value_math
max(q2_populacao_theta_nulo_math)
q2_populacao_theta_nulo_verb = replicate(5000, q2_theta_nulo_cor(q2_dados, "verb_SAT"))
q2_p_value_verb = sum(abs(q2_populacao_theta_nulo_verb) >= abs(q2_theta_chapeu_cor_verb)) / length(q2_populacao_theta_nulo_verb)
q2_p_value_verb
max(q2_populacao_theta_nulo_verb)
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico,0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
grafico_verb = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_verb),
"Expressão Verbal",
round(q2_theta_chapeu_cor_verb,3),
q2_p_value_verb,
-round(q2_theta_chapeu_cor_verb,3), 3000, '(b)')
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
grafico_verb = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_verb),
"Expressão Verbal",
round(q2_theta_chapeu_cor_verb,3),
q2_p_value_verb,
-round(q2_theta_chapeu_cor_verb,3), 3000, '(b)')
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico,0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
grafico_verb = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_verb),
"Expressão Verbal",
round(q2_theta_chapeu_cor_verb,3),
q2_p_value_verb,
-round(q2_theta_chapeu_cor_verb,3), 3000, '(b)')
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
grid.arrange(graf_fal_fel,graf_fal_mis,graf_fel_mis, ncol=1,
bottom = textGrob("Modelo Nulo entre Sorrisos",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
grid.arrange(graf_fal_fel,graf_fal_mis,graf_fel_mis, ncol=1,
bottom = textGrob("Modelo Nulo entre Sorrisos",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
knitr::opts_chunk$set(tidy = TRUE,
#warning=FALSE, message=FALSE,
fig.width = 8,
fig.height = 6,
fig.align="center"
)
library(tidyverse)
theme_set(theme_bw())
library(boot)
library(broom)
library(grid)
library(gridExtra)
library(quantreg)
library(scales)
q1_dados = read_csv(here::here("data/leniency.csv"),
col_types = "cdc")
q1_theta_chapeu <- function(dados) {
medias = dados %>%
group_by(with_smile) %>%
summarise(media=mean(leniency))
smile = medias %>% filter(with_smile=="yes") %>% pull(media)
nosmile = medias %>% filter(with_smile=="no") %>% pull(media)
smile - nosmile
}
q1_amostra_theta_chapeu = round(q1_theta_chapeu(q1_dados),3)
q1_theta_nulo <- function(dados) {
random = dados %>%
mutate(leniency_random=sample(leniency, n()))
medias = random %>%
group_by(with_smile) %>%
summarise(media_populacao=mean(leniency_random))
smile = medias %>% filter(with_smile=="yes") %>% pull(media_populacao)
nosmile = medias %>% filter(with_smile=="no") %>% pull(media_populacao)
smile - nosmile
}
q1_populacao_theta_nulo = replicate(5000, q1_theta_nulo(q1_dados))
q1_p_value = sum(abs(q1_populacao_theta_nulo) >= abs(q1_amostra_theta_chapeu)) / length(q1_populacao_theta_nulo)
tibble(media=q1_populacao_theta_nulo) %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=q1_amostra_theta_chapeu, color='red') +
geom_vline(xintercept=-q1_amostra_theta_chapeu, color='red') +
annotate("label", x=-1.25, y=1150, hjust=0, vjust=1,
label=paste("p-value:", round(q1_p_value,3), "\nTC: [", -q1_amostra_theta_chapeu, ",", q1_amostra_theta_chapeu, "]")) +
labs(x=paste('\nModelo Nulo entre Imagens com Sorriso e Sem Sorriso'), y='Quantidade\n') +
theme(text=element_text(size=16))
q1_theta_chapeu_categ <- function(dados, tipo1, tipo2) {
medias = dados %>%
group_by(smile) %>%
summarise(media=mean(leniency))
smile1 = medias %>% filter(smile==tipo1) %>% pull(media)
smile2 = medias %>% filter(smile==tipo2) %>% pull(media)
smile1 - smile2
}
q1_theta_nulo_categ <- function(dados, tipo1, tipo2) {
random = dados %>%
#filter(smile %in% c(tipo1, tipo2)) %>%
mutate(leniency_random=sample(leniency, n()))
medias = random %>%
group_by(smile) %>%
summarise(media_random=mean(leniency_random))
smile1 = medias %>% filter(smile==tipo1) %>% pull(media_random)
smile2 = medias %>% filter(smile==tipo2) %>% pull(media_random)
smile1 - smile2
}
q1_grafico_distribuicao_categ <- function(dados, tipo1, tipo2, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste(tipo1, 'e', tipo2), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,0,1)) +
theme(text=element_text(size=14))
}
q1_executa_comparacao <- function(dados, tipo1, tipo2, subtitulo) {
q1_amostra_theta_chapeu_categ = q1_theta_chapeu_categ(dados, tipo1, tipo2)
q1_populacao_theta_nulo_categ = replicate(5000, q1_theta_nulo_categ(dados, tipo1, tipo2))
q1_p_value_categ = sum(abs(q1_populacao_theta_nulo_categ) >= abs(q1_amostra_theta_chapeu_categ)) / length(q1_populacao_theta_nulo_categ)
#q1_p_value_categ
q1_grafico_distribuicao_categ(tibble(media=q1_populacao_theta_nulo_categ),
tipo1, tipo2,
round(q1_amostra_theta_chapeu_categ,3),
round(q1_p_value_categ, 3),
-1.5, 1000, subtitulo)
}
graf_fal_fel = q1_executa_comparacao(q1_dados, "false smile", "felt smile", "(a)")
graf_fal_mis = q1_executa_comparacao(q1_dados, "false smile", "miserable smile", "(b)")
graf_fel_mis = q1_executa_comparacao(q1_dados, "felt smile", "miserable smile", "(c)")
grid.arrange(graf_fal_fel,graf_fal_mis,graf_fel_mis, ncol=1,
bottom = textGrob("Modelo Nulo entre Sorrisos",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
q2_dados = read_csv(here::here("data/sat-gpa.csv"),
col_types = "dddd")
q2_theta_chapeu_cor <- function(dados, col) {
cor(dados$comp_GPA, dados[[col]], method='pearson')
}
q2_theta_chapeu_cor_math = q2_theta_chapeu_cor(q2_dados, "math_SAT")
q2_theta_chapeu_cor_verb = q2_theta_chapeu_cor(q2_dados, "verb_SAT")
q2_theta_nulo_cor <- function(dados, col) {
random = dados %>%
mutate(comp_GPA_random = sample(comp_GPA, n()))
cor(random$comp_GPA_random, random[[col]], method='pearson')
}
q2_populacao_theta_nulo_math = replicate(5000, q2_theta_nulo_cor(q2_dados, "math_SAT"))
q2_p_value_math = sum(abs(q2_populacao_theta_nulo_math) >= abs(q2_theta_chapeu_cor_math)) / length(q2_populacao_theta_nulo_math)
q2_populacao_theta_nulo_verb = replicate(5000, q2_theta_nulo_cor(q2_dados, "verb_SAT"))
q2_p_value_verb = sum(abs(q2_populacao_theta_nulo_verb) >= abs(q2_theta_chapeu_cor_verb)) / length(q2_populacao_theta_nulo_verb)
q2_grafico_distribuicao <- function(dados, col, theta_chapeu_grafico, p_value, xleg, yleg, subtitulo) {
dados %>%
ggplot(aes(media)) +
geom_histogram(binwidth=.2, alpha=.1, color='blue', fill='blue') +
geom_vline(xintercept=theta_chapeu_grafico, color='red') +
geom_vline(xintercept=-theta_chapeu_grafico, color='red') +
annotate("label", x=xleg, y=yleg, hjust=0, vjust=1,
label=paste("p-value:", p_value, "\nTC: [", -theta_chapeu_grafico, ",", theta_chapeu_grafico, "]")) +
labs(x=paste('\n', col), y='', subtitle=subtitulo) +
scale_x_continuous(breaks=c(-1,-theta_chapeu_grafico,0,theta_chapeu_grafico,1)) +
theme(text=element_text(size=16))
}
grafico_math = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_math),
"Matemática",
round(q2_theta_chapeu_cor_math,3),
q2_p_value_math,
-round(q2_theta_chapeu_cor_math,3), 3000, '(a)')
grafico_verb = q2_grafico_distribuicao(tibble(media=q2_populacao_theta_nulo_verb),
"Expressão Verbal",
round(q2_theta_chapeu_cor_verb,3),
q2_p_value_verb,
-round(q2_theta_chapeu_cor_verb,3), 3000, '(b)')
grid.arrange(grafico_math, grafico_verb, ncol=2,
bottom = textGrob("\nModelo Nulo entre Computação e Disciplinas",
gp = gpar(fontsize=16)),
left = textGrob("Quantidade", rot=90,
gp = gpar(fontsize=16)))
